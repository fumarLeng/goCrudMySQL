basePath: /api/v1
definitions:
  user.CreateUserRq:
    properties:
      email:
        description: 使用者 Email
        example: leo@example.com
        type: string
      name:
        description: 使用者名稱
        example: Leo
        type: string
    required:
    - email
    - name
    type: object
  user.User:
    properties:
      createdAt:
        description: 建立時間
        example: "2025-05-13T12:00:00Z"
        type: string
      email:
        description: 使用者 Email
        example: leo@example.com
        type: string
      id:
        description: 使用者 ID
        example: 1
        type: integer
      name:
        description: 使用者名稱
        example: Leo
        type: string
      updatedAt:
        description: 最後更新時間
        example: "2025-05-13T12:30:00Z"
        type: string
    required:
    - email
    - name
    type: object
host: localhost:8088
info:
  contact: {}
  description: GO語言  CRUD_TEST
  title: Go CRUD API
  version: "1.0"
paths:
  /users:
    get:
      produces:
      - application/json
      responses: {}
      summary: 取得所有使用者
      tags:
      - users
    post:
      description: 新增一筆使用者資料
      parameters:
      - description: 使用者資料
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.CreateUserRq'
      responses: {}
      summary: 建立使用者
      tags:
      - users
  /users/{id}:
    delete:
      parameters:
      - description: 使用者 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: 刪除使用者
      tags:
      - users
    get:
      parameters:
      - description: 使用者 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: 取得單一使用者
      tags:
      - users
    put:
      consumes:
      - application/json
      parameters:
      - description: 使用者 ID
        in: path
        name: id
        required: true
        type: integer
      - description: 使用者資料
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.User'
      produces:
      - application/json
      responses: {}
      summary: 更新使用者
      tags:
      - users
swagger: "2.0"
